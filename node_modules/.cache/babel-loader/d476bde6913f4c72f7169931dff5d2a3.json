{"ast":null,"code":"var _jsxFileName = \"/Users/alicelu/Desktop/PROJECTS/repos/react-project/src/pages/PageHome.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport { API_TOKEN } from '../globals/globals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageHome({\n  sort\n}) {\n  _s();\n\n  const [moviesData, setMoviesData] = useState(null);\n  useEffect(() => {\n    //async function assure the function is going in order top down, the line of code is not running if the line above is not finished//\n    const fetchMovies = async () => {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?language=en-US&page=1`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + API_TOKEN\n        }\n      });\n      const moviesData = await res.json();\n      const first12Movies = moviesData.results.splice(0, 12);\n      setMoviesData(first12Movies);\n    };\n\n    fetchMovies();\n  }, [sort]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavSort, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), moviesData !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      moviesData: moviesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageHome, \"CvtcJgai2YZ6zYTZqSttsTo582E=\");\n\n_c = PageHome;\nexport default PageHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHome\");","map":{"version":3,"sources":["/Users/alicelu/Desktop/PROJECTS/repos/react-project/src/pages/PageHome.js"],"names":["useEffect","useState","NavSort","Movies","API_TOKEN","PageHome","sort","moviesData","setMoviesData","fetchMovies","res","fetch","headers","json","first12Movies","results","splice"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAAA;;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACpB;AACQ,UAAMS,WAAW,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCL,IAAK,wBAA5C,EAAqE;AACxFM,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB,kBAFX;AAGL,2BAAiB,YAAYR;AAHxB;AAD+E,OAArE,CAAvB;AAOA,YAAMG,UAAU,GAAG,MAAMG,GAAG,CAACG,IAAJ,EAAzB;AACA,YAAMC,aAAa,GAAGP,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,CAA0B,CAA1B,EAA4B,EAA5B,CAAtB;AACAR,MAAAA,aAAa,CAACM,aAAD,CAAb;AACD,KAXH;;AAaEL,IAAAA,WAAW;AAEhB,GAjBQ,EAiBN,CAACH,IAAD,CAjBM,CAAT;AAmBA,sBACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,UAAU,KAAK,IAAf,iBAAuB,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA7BQF,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport { API_TOKEN } from '../globals/globals';\n\nfunction PageHome({ sort }) {\n\n    const [moviesData, setMoviesData] = useState(null);\n\n    useEffect(() => {\n//async function assure the function is going in order top down, the line of code is not running if the line above is not finished//\n        const fetchMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                  }\n            });\n            const moviesData = await res.json();\n            const first12Movies = moviesData.results.splice(0,12); \n            setMoviesData(first12Movies);\n          }\n      \n          fetchMovies();\n\n    }, [sort]);\n\n    return (\n        <section className=\"home-page\">\n            <NavSort />\n            {moviesData !== null && <Movies moviesData={moviesData} />}\n        </section>\n    )\n}\n\nexport default PageHome;\n"]},"metadata":{},"sourceType":"module"}