{"ast":null,"code":"var _jsxFileName = \"/Users/alicelu/Desktop/PROJECTS/repos/react-project/src/pages/PageSingleMovie.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { API_KEY, appStorageName } from '../globals/globals';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport Popup from '../components/Popup';\nimport Cast from '../components/Cast';\nimport tag from \"../images/tag.svg\";\nimport fav from \"../images/favorite.svg\"; //if the fav movie in storage is null set the list to be empty array else do a super list of stringify objets//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getFavs() {\n  let favsFromStorage = localStorage.getItem(appStorageName);\n\n  if (favsFromStorage === null) {\n    favsFromStorage = [];\n  } else {\n    favsFromStorage = JSON.parse(favsFromStorage);\n  }\n\n  return favsFromStorage;\n}\n\nfunction PageSingleMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [playTrailer, setPlayTrailer] = useState(false);\n  const [movieFav, setMovieFav] = useState(false);\n  let trailerKey = \"\";\n  let movieDirector = \"\";\n  useEffect(() => {\n    const getMovie = async () => {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&append_to_response=videos,credits`);\n      const moviesDataFromAPI = await res.json();\n      setMovie(moviesDataFromAPI); // search the local storage and check if there is an stored fav movie have the same id as current movie, if yes get the index of that item (should be only 0 if faved or -1 is not fav)//\n\n      const favs = getFavs(); // why is it possible to sign a constant to be a function ?//\n\n      const indexOfFoundMovie = favs.findIndex(item => item.id === moviesDataFromAPI.id);\n\n      if (indexOfFoundMovie !== -1) {\n        setMovieFav(true);\n      }\n    };\n\n    getMovie();\n  }, []);\n\n  if (movie) {\n    const filteredArray = movie.videos.results.filter(function (itm) {\n      return itm.type === \"Trailer\";\n    });\n    const director = movie.credits.crew.filter(function (itm) {\n      return itm.job === \"Director\";\n    });\n    trailerKey = filteredArray[0].key;\n    movieDirector = director[0].name;\n    console.log(movie);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"key=\", movie !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"single-movie-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-poster\",\n          children: movie.poster_path == null ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noPoster,\n            alt: \"No poster available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [movie.title, \" (\", movie.release_date.substring(0, 4), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"embed\", {\n              src: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), movie.genres.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [\" \", tag.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 46\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"user-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"star\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\u2B50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [movie.vote_average, \"/10 \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [movie.release_date, \" (\", movie.production_countries[0].iso_3166_1, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"trailer-btn\",\n                onClick: () => setPlayTrailer(true),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"triangle\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 97\n                }, this), \"Trailer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), movieFav ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Favourite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: fav\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            trigger: playTrailer,\n            setTrigger: setPlayTrailer,\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${trailerKey}`,\n              title: \"YouTube video player\",\n              frameborder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowfullscreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Director\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: `${movieDirector}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Budget\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD'\n                  }).format(movie.budget)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Revenue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD'\n                  }).format(movie.revenue)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"top-cast\",\n        children: \"Top Billed Casts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"casts-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"casts\",\n          children: /*#__PURE__*/_jsxDEV(Cast, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(PageSingleMovie, \"e5796jdYB3nN25lkd7+sZdbu17g=\", false, function () {\n  return [useParams];\n});\n\n_c = PageSingleMovie;\nexport default PageSingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSingleMovie\");","map":{"version":3,"sources":["/Users/alicelu/Desktop/PROJECTS/repos/react-project/src/pages/PageSingleMovie.js"],"names":["useParams","useEffect","useState","API_KEY","appStorageName","noPoster","Popup","Cast","getFavs","favsFromStorage","localStorage","getItem","JSON","parse","PageSingleMovie","id","movie","setMovie","playTrailer","setPlayTrailer","movieFav","setMovieFav","trailerKey","movieDirector","getMovie","res","fetch","moviesDataFromAPI","json","favs","indexOfFoundMovie","findIndex","item","filteredArray","videos","results","filter","itm","type","director","credits","crew","job","key","name","console","log","poster_path","title","release_date","substring","tag","genres","map","vote_average","production_countries","iso_3166_1","fav","overview","Intl","NumberFormat","style","currency","format","budget","revenue"],"mappings":"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","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { API_KEY, appStorageName} from '../globals/globals';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport Popup from '../components/Popup';\nimport Cast from '../components/Cast';\nimport tag from '../images/tag.svg';\nimport fav from \"../images/favorite.svg\";\n\n//if the fav movie in storage is null set the list to be empty array else do a super list of stringify objets//\nfunction getFavs(){\n    let favsFromStorage = localStorage.getItem(appStorageName);\n    if(favsFromStorage === null){\n        favsFromStorage = [];\n    }else{\n        favsFromStorage = JSON.parse(favsFromStorage);\n    }\n    return favsFromStorage;\n  }\n\n\n\nfunction PageSingleMovie() {\n\n    const { id } = useParams();\n    const [ movie,setMovie ] = useState(null);\n    const [ playTrailer,setPlayTrailer ] = useState(false);\n    const [movieFav, setMovieFav] = useState(false)\n    let trailerKey = \"\";\n    let movieDirector = \"\";\n\n    useEffect(() => {\n        const getMovie = async () => {\n            const res =await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&append_to_response=videos,credits`);\n            const moviesDataFromAPI = await res.json();\n            \n\n            setMovie(moviesDataFromAPI); \n            // search the local storage and check if there is an stored fav movie have the same id as current movie, if yes get the index of that item (should be only 0 if faved or -1 is not fav)//\n            const favs = getFavs();// why is it possible to sign a constant to be a function ?//\n            const indexOfFoundMovie = favs.findIndex(item => item.id === moviesDataFromAPI.id);\n\n            if(indexOfFoundMovie !== -1){\n                setMovieFav(true);\n            }\n            \n        }\n\n        getMovie();\n    \n\n    }, []);\n\n\n\n    if(movie){\n        const filteredArray = movie.videos.results.filter(function(itm){\n        return itm.type === \"Trailer\";\n\n    });\n        const director = movie.credits.crew.filter(function(itm){\n        return itm.job === \"Director\";\n    });\n    trailerKey = filteredArray[0].key;\n    movieDirector = director[0].name;\n    console.log(movie);\n    }\n\n\n\n    return (\n        <>\n        key={movie !== null &&\n        <>\n        <section className=\"single-movie-header\">\n\n            <div className=\"movie-poster\">\n                {movie.poster_path == null ?\n                    <img src={noPoster} alt=\"No poster available.\" /> :\n                    <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />}\n                \n            </div>\n            \n            <div >                   \n                <h2>{movie.title} ({movie.release_date.substring(0,4)})</h2>\n                <div className = 'tags'>\n                <embed src={tag}/>\n                    {movie.genres.map(tag => <div className = \"tag\"> {tag.name}</div>)}\n                    \n                </div>\n                \n                <ul className=\"user-score\">    \n                    <li className=\"star\"> \n                        <div>⭐</div>\n                        <div>{movie.vote_average}/10 </div>\n\n                    </li>\n                    <li>{movie.release_date} ({movie.production_countries[0].iso_3166_1})</li>\n                    <li><button className = \"trailer-btn\" onClick = {()=> setPlayTrailer(true)}><span className = \"triangle\"> </span>Trailer</button></li>\n                     \n                    {movieFav ? \n                    <li><p>Favourite</p><img src={fav}/></li>: \n                    <p/> \n                    }\n\n                    \n                    \n                </ul>\n            <Popup trigger={playTrailer} setTrigger={setPlayTrailer}>\n                <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${trailerKey}`} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </Popup>\n                    \n            \n            <section className = \"movie-info\">\n                <div className=\"overview\">\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                </div>\n                <div className=\"stats\">\n                    <div>\n                        <h3>Director</h3>\n                        <p>{`${movieDirector}`}</p> \n                    </div>  \n                    <div>\n                        <h3>Budget</h3>\n                        <p>{new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(movie.budget)}</p>\n                    </div>\n                    <div>\n                        <h3>Revenue</h3>\n                        <p>{new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(movie.revenue)}</p>\n                    </div>\n                 \n                </div>\n\n\n            </section>\n            </div>\n            \n        </section>\n\n        <h2 id = \"top-cast\">Top Billed Casts</h2>\n        <section className = \"casts-box\">\n            <div className = \"casts\">\n\n                <Cast movie={movie}/>\n\n            </div>\n        </section>\n        </>\n        }\n        </>\n        \n    )\n}\n\n\nexport default PageSingleMovie;\n\n"]},"metadata":{},"sourceType":"module"}